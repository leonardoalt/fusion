name: Fusion build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_circuit:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: ⚡ Cache Circuits
        id: cache-circuits
        uses: actions/cache@v3
        with:
          path: circuits/
          key: cache-circuits-${{ hashFiles('**/*.zok') }}
      - name: Compile circuit
        if: steps.cache-circuits.outputs.cache-hit != 'true'
        run: cd circuits && make
      - name: Compute trusted setup
        if: steps.cache-circuits.outputs.cache-hit != 'true'
        run: cd circuits && make setup

  build:
    needs: build_circuit
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: ⚡ Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies
        run: rustup component add clippy rustfmt
      - name: Restore cached circuits
        id: cache-circuits
        uses: actions/cache/restore@v3
        with:
          path: circuits/
          key: cache-circuits-${{ hashFiles('**/*.zok') }}
      - name: Compile contracts
        run: cd l1-verifier && make
      - name: Format contract Rust bindings
        run: cd l1-verifier/out/bindings && cargo fmt
      - name: Build
        run: cargo build --release
      - name: Run tests
        run: cargo test --release -- --nocapture
      - name: Lint
        run: cargo clippy --all --all-features -- -D warnings
      - name: Format
        run: cargo fmt --check --verbose
